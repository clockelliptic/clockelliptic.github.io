{"version":3,"sources":["redux/utils/mockData.js","redux/config.js","redux/modules/actions.js","Components/Map/Map.js","Components/DrawableArea.js","Components/Mapp.js","Components/LayerList.js","Components/Toolbar.js","Components/SyncIndicator.js","redux/modules/state.js","redux/modules/side-effects.js","redux/modules/epics.js","redux/configureStore.js","serviceWorker.js","index.js","Components/App/App.js","Components/Map/summonersrift.svg"],"names":["LETTERS","NUMBERS","isEven","n","selectFrom","SET","Math","floor","random","length","calcCanvasSize","window","innerWidth","innerHeight","ww","wh","initialState","Canvas","size","width","height","Palette","selectedColor","Colors","Toolbar","selectedTool","Tools","Layers","selectedLayer","undefined","localLayers","guestLayers","Status","sendingData","receivingData","Session","userId","Array","fill","map","x","i","whichSet","join","pusherConfig","ActionTypes","CANVAS_RESIZE","PALETTE_SELECT","TOOL_SELECT","LAYER_ADD","LAYER_DELETE","LAYER_UPDATE_DATA","LAYER_UPDATE_COLOR","LAYER_SELECT","UPDATE_DATA_COMPLETE","RECEIVING_DATA","Action","resizeCanvas","type","selectColor","color","selectTool","tool","addLayer","layer","Object","assign","deleteLayer","updateLayerData","new_data","udateLayerColor","selectLayer","sendDataUpdateFulfilled","receivingStatus","GuestActionTypes","Summoners","styled","SVG","Map","src","_Map","DrawableArea","props","useSelector","state","dispatch","updateLayer","onDragStart","y","onDragMove","dx","dy","onDragEnd","useDrawable","useDispatch","Drag","resetOnStart","makeCurrentLine","isDragging","dragStart","dragEnd","dragMove","stroke","cx","cy","r","style","pointerEvents","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","Mapp","resizeHandler","e","useEffect","addEventListener","removeEventListener","useWindowResizeEvent","Box","className","touchAction","LinearGradient","id","from","to","RadialGradient","toOpacity","fromOpacity","fromOffset","strokeWidth","rx","LinePath","key","data","curve","CURVE","tension","d","concat","opacity","filter","Group","point","Circle","ListItem","isSelected","ColorIndicator","Radial","Info","div","Item","onClick","Grid","rows","columns","gap","areas","name","start","end","gridArea","owner","slice","LayerList","ListFrame","ResponsiveGridLayout","WidthProvider","Responsive","layouts","md","_","w","h","listItems","breakpoints","cols","rowHeight","margin","containerPadding","isDraggable","sessionUser","Bar","direction","Trash","deleteLayer_Handler","ChapterAdd","newLayer","createLayer_Handler","SyncIndicators","sendColor","receiveColor","LinkUp","LinkDown","createReducer","handlers","action","hasOwnProperty","makeLayer","updateGuestLayer","reduce","acc","updateCanvas","console","log","syncData","channel","Pusher","cluster","forceTLS","subscribe","A","syncEpic","action$","state$","deps","pipe","ofType","mergeMap","ajax","url","method","headers","body","JSON","stringify","postUpdate","debounceTime","ajax_response","catchError","error","of","composeEnhancers","fromEvent","event","timeStamp","val","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","store","createStore","tools","applyMiddleware","run","combineEpics","source","bind","guestAction","parse","mapped_action","Boolean","location","hostname","match","render","Title","Indicators","Grommet","align","justify","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2002ce60.chunk.js","sourcesContent":["const LETTERS = [...'qwertyuiopasdfghjklzxcvbnm']\r\nconst NUMBERS = [...'1234567890']\r\nconst isEven = n => n%2===0\r\nconst selectFrom = SET => SET[Math.floor(Math.random()*SET.length)]\r\n\r\nexport const makeUserId = () => Array(256).fill().map((x, i) => {\r\n    const whichSet = isEven(Math.floor(Math.random()*2)) && isEven(i)\r\n    return (whichSet) ? selectFrom(LETTERS) : selectFrom(NUMBERS)\r\n}).join('')","import { makeUserId } from './utils/mockData'\r\n\r\nexport const calcCanvasSize = () => {\r\n    const [ww, wh] = [window.innerWidth/2, window.innerHeight]\r\n    const dim = (ww > wh) ? wh : ww\r\n    return dim*0.9\r\n}\r\n\r\nexport const initialState = {\r\n    Canvas: {\r\n        size: {width: calcCanvasSize(), height: calcCanvasSize()}\r\n    },\r\n    Palette: {\r\n        selectedColor: '',\r\n        Colors: '',\r\n    },\r\n    Toolbar: {\r\n        selectedTool: '',\r\n        Tools: '',\r\n    },\r\n    Layers: {\r\n        selectedLayer: undefined, //SHAPE: {id: 'layer id', owner: 'layer owner'}\r\n        localLayers: [],\r\n        guestLayers: []\r\n    },\r\n    Status: {\r\n        sendingData: false,\r\n        receivingData: false\r\n    },\r\n    Session: {\r\n        userId: makeUserId(),\r\n    }\r\n}\r\n\r\nexport const pusherConfig = {\r\n    KEY:\"3119dd4a27bd972a12a1\",\r\n    CLUSTER:\"us2\"\r\n}\r\n","import { calcCanvasSize } from '../config'\r\nimport { dispatch } from 'rxjs/internal/observable/pairs'\r\n\r\nexport const ActionTypes = {\r\n    /*\r\n     * Action types that describe local activities.\r\n     */\r\n\r\n    /* Canvas  */\r\n    CANVAS_RESIZE: 'CANVAS_RESIZE',\r\n\r\n    /* Palette */\r\n    PALETTE_SELECT: 'PALETTE_SELECT',\r\n\r\n    /* Toolbar */\r\n    TOOL_SELECT: 'TOOL_SELECT',\r\n\r\n    /* Layers */\r\n    LAYER_ADD: 'LAYER_ADD',\r\n    LAYER_DELETE: 'LAYER_DELETE',\r\n    LAYER_UPDATE_DATA: 'LAYER_UPDATE_DATA',\r\n    LAYER_UPDATE_COLOR: 'LAYER_UPDATE_COLOR',\r\n    LAYER_SELECT: 'LAYER_SELECT',\r\n\r\n    /* Remote data sync indicators */\r\n    UPDATE_DATA_COMPLETE: 'UPDATE_DATA_COMPLETE',\r\n    RECEIVING_DATA: 'RECEIVING_DATA',\r\n\r\n}\r\n\r\nexport const Action = {\r\n    /* Canvas */\r\n    resizeCanvas: () => ({ type: ActionTypes.CANVAS_RESIZE, size: {width: calcCanvasSize(), height: calcCanvasSize()} }),\r\n    /* Palette */\r\n    selectColor: (color) => ({ type: ActionTypes.PALETTE_SELECT, color:color}),\r\n\r\n    /* Toolbar */\r\n    selectTool: (tool) => ({ type: ActionTypes.TOOL_SELECT, tool}),\r\n\r\n    /* Layers */\r\n    addLayer: (layer) => (Object.assign({ type: ActionTypes.LAYER_ADD, layer: layer },)),\r\n    deleteLayer: (layer) => ({ type: ActionTypes.LAYER_DELETE, layer: layer}),\r\n    updateLayerData: (layer, new_data) => ({ type: ActionTypes.LAYER_UPDATE_DATA, new_data:new_data, layer: layer}),\r\n    udateLayerColor: (layer, color) => ({ type: ActionTypes.LAYER_UPDATE_COLOR, color:color, layer:layer}),\r\n    selectLayer: (layer) => ({type: ActionTypes.LAYER_SELECT, layer:layer }),\r\n\r\n    /* Syncing Data */\r\n    sendDataUpdateFulfilled: () => ({ type: ActionTypes.UPDATE_DATA_COMPLETE }),\r\n    receivingStatus: () => ({ type: ActionTypes.RECEIVING_DATA })\r\n}\r\n\r\n\r\n/*\r\n * **********************************************************\r\n * Actions describing SIDE-EFFECTS incoming from server.\r\n * **********************************************************\r\n */\r\n\r\n\r\nexport const GuestActionTypes = {\r\n    /*\r\n     * Action types that describe activities coming from server.\r\n     *\r\n     * Map local action types from remote server & dispatch like so:\r\n     *\r\n     *     const mapped_action = Object.assign(action, { type: GuestActionTypes[action.type] })\r\n     *     dispatch( mapped_action )\r\n     */\r\n\r\n    /* Layers */\r\n    LAYER_ADD: 'GUEST_LAYER_ADD',\r\n    LAYER_DELETE: 'GUEST_LAYER_DELETE',\r\n    LAYER_UPDATE_DATA: 'GUEST_LAYER_UPDATE_DATA',\r\n    LAYER_UPDATE_COLOR: 'GUEST_LAYER_UPDATE_COLOR',\r\n    LAYER_SELECT: 'GUEST_LAYER_SELECT',\r\n}\r\n\r\nexport const GuestAction = {\r\n        /* Layers */\r\n        addLayer: (layer) => ({ type: GuestActionTypes.LAYER_ADD, layer: layer }),\r\n        deleteLayer: (layer) => ({ type: GuestActionTypes.LAYER_DELETE, layerId: layer.id, layerOwner: layer.owner}),\r\n        updateLayerData: (layer, new_data) => ({ type: GuestActionTypes.LAYER_UPDATE_DATA, new_data:new_data, layer:layer}),\r\n        udateLayerColor: (pointer, color) => ({ type: GuestActionTypes.LAYER_UPDATE_COLOR, color:color, pointer:pointer}),\r\n        selectLayer: (layer) => ({type: GuestActionTypes.LAYER_SELECT, layerId: layer.id, layerOwner: layer.owner}),\r\n}","import React from 'react'\r\nimport styled  from 'styled-components'\r\nimport SVG from 'react-inlinesvg'\r\nimport _Map from './summonersrift.svg'\r\n\r\nconst Summoners = styled(SVG)`\r\n/*\r\n  & > g > #Jungle * {\r\n    stroke: #ff0;\r\n  }\r\n\r\n  & > g > #Jungle #Blastcone1 {\r\n    fill: #ffF !important;\r\n  }\r\n\r\n  & > g > #BlueObjectives * {\r\n    stroke: #00f;\r\n  }\r\n\r\n  & > g > #RedObjectives * {\r\n    stroke: #f00;\r\n  }\r\n\r\n  & > g > #RedObjectives * {\r\n    stroke: #f00;\r\n  }\r\n\r\n  & > g > #RedObjectives * > #Base3 > #Mid2 {\r\n    stroke: #f00;\r\n    display: none;\r\n  }\r\n*/\r\n`;\r\n\r\nconst Map = () => <Summoners src={_Map} />\r\n\r\nexport default Map;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Action } from '../redux/modules/actions'\r\nimport { Drag } from '@vx/drag';\r\n\r\nconst useDrawable = (dispatch) => { /* CUSTOM REDUX-REACT HOOK */\r\n    const updateLayer = Action.updateLayerData\r\n    return { /* note: `layer` is the currently selected layer */\r\n        onDragStart: (layer) => ({x, y}) => dispatch(updateLayer(layer, [{ x: x, y: y }])),\r\n        onDragMove: (layer) => ({x, y, dx, dy}) =>  dispatch(updateLayer(layer, [{ x: x+dx, y: y+dy }])),\r\n        onDragEnd: (layer) => ({x, y}) => dispatch(updateLayer(layer, [{ x: x, y: y }])),\r\n    }\r\n}\r\n\r\nexport const DrawableArea = props => {\r\n    const {selectedLayer} = useSelector(state => state.Layers)\r\n    const {width, height} = useSelector(state => state.Canvas.size)\r\n    const {onDragStart, onDragMove, onDragEnd} = useDrawable(useDispatch())\r\n\r\n    return (\r\n        <Drag\r\n            width={width}\r\n            height={height}\r\n            resetOnStart={true}\r\n            onDragStart={onDragStart(selectedLayer)}\r\n            onDragMove={(selectedLayer.type===\"Pencil\") ? onDragMove(selectedLayer) : ()=>{}}\r\n            onDragEnd={(selectedLayer.type===\"Pencil\") ? onDragEnd(selectedLayer) : ()=>{}}\r\n        >\r\n            {\r\n                makeCurrentLine(width, height)\r\n            }\r\n        </Drag>\r\n    )\r\n}\r\n\r\n\r\nconst makeCurrentLine = (width, height) => ({ x, y, dx, dy, isDragging, dragStart, dragEnd, dragMove }) => {\r\n    const DrawingIndicator = () => ( isDragging && (\r\n        /*   VISUAL INDICATORS of line start and/or line end while drawing   */\r\n      <g>\r\n        <circle\r\n          fill=\"none\"\r\n          stroke=\"white\"\r\n          width={8}\r\n          height={8}\r\n          cx={x + dx}\r\n          cy={y + dy}\r\n          r={3}\r\n          style={{ pointerEvents: 'none' }}\r\n        />\r\n      </g>\r\n    )\r\n  );\r\n\r\n    const DrawingArea = () => (\r\n        /*    RECEIVES DRAWING INPUT    */\r\n      <rect\r\n          fill=\"transparent\"\r\n          width={width}\r\n          height={height}\r\n          onMouseDown={dragStart}\r\n          onMouseUp={dragEnd}\r\n          onMouseMove={dragMove}\r\n          onTouchStart={dragStart}\r\n          onTouchEnd={dragEnd}\r\n          onTouchMove={dragMove}\r\n      />\r\n    );\r\n    return (\r\n      <g>\r\n        <DrawingIndicator />\r\n        <DrawingArea />\r\n      </g>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Action } from '../redux/modules/actions'\r\n\r\nimport { LinePath } from '@vx/shape';\r\nimport { LinearGradient, RadialGradient } from '@vx/gradient';\r\nimport { Circle } from '@vx/shape';\r\nimport { Group } from '@vx/group';\r\nimport { curveCardinal as CURVE } from '@vx/curve';\r\n\r\nimport { Box } from 'grommet'\r\nimport Map from './Map/Map.js'\r\nimport { DrawableArea } from './DrawableArea'\r\n\r\n\r\nconst useWindowResizeEvent = (dispatch) => {\r\n    const resizeHandler = (e) => { dispatch(Action.resizeCanvas()) }\r\n\r\n    useEffect(\r\n      () => {\r\n        window.addEventListener('resize', resizeHandler);\r\n\r\n        return function cleanup() {\r\n          window.removeEventListener('resize', resizeHandler)\r\n        }\r\n      }\r\n    )\r\n}\r\n\r\nexport const Mapp = props => {\r\n    const {guestLayers, localLayers, selectedLayer} = useSelector(state => state.Layers)\r\n    useWindowResizeEvent(useDispatch())\r\n    const {width, height} = useSelector(state => state.Canvas.size)\r\n\r\n    const CANVAS_SCALE = 1\r\n\r\n    const Canvas = () => (\r\n        <rect\r\n            fill=\"url(#backgroundSphere)\"\r\n            strokeWidth={5}\r\n            width={width*CANVAS_SCALE}\r\n            height={height*CANVAS_SCALE}\r\n            rx={\"100%\"}\r\n        />\r\n    );\r\n\r\n    const Lines = () =>\r\n        localLayers.map((layer, i) =>\r\n            <LinePath\r\n                key={`line-${layer.id}-${i}`}\r\n                fill={'transparent'}\r\n                stroke=\"url(#stroke)\"\r\n                strokeWidth={3}\r\n                data={layer.data}\r\n                curve={CURVE.tension(0.1)}\r\n                x={d => d.x}\r\n                y={d => d.y}\r\n            />\r\n        ).concat(guestLayers.map((layer, i) =>\r\n            <LinePath\r\n                key={`guestLine-${layer.id}-${i}`}\r\n                fill={'transparent'}\r\n                stroke=\"url(#stroke)\"\r\n                opacity={0.5}\r\n                strokeWidth={3}\r\n                data={layer.data}\r\n                curve={CURVE.tension(0.1)}\r\n                x={d => d.x}\r\n                y={d => d.y}\r\n            />\r\n        ));\r\n\r\n    const Points = () => (\r\n        localLayers\r\n            .filter(layer => layer.id===selectedLayer.id)\r\n            .map((layer, i) =>\r\n                <Group key={`pointGroup-${layer.id}-${i}`}>\r\n                    {\r\n                        layer.data.map((point, i) =>\r\n                                <Circle\r\n                                    key={`point-${layer.id}-${i}`}\r\n                                    className=\"dot\"\r\n                                    cx={point.x}\r\n                                    cy={point.y}\r\n                                    r={2.}\r\n                                    fill=\"#ff2c34\"//\"#31c4f6\"\r\n                                    opacity={0.8}\r\n                                />\r\n                        )\r\n                    }\r\n                </Group>\r\n            )\r\n    );\r\n\r\n    return (\r\n        <Box\r\n          className=\"Draw\"\r\n          style={{\r\n            touchAction: 'none',\r\n          }}\r\n        >\r\n          <svg width={width*CANVAS_SCALE} height={height*CANVAS_SCALE}>\r\n\r\n            <LinearGradient id=\"stroke\" from=\"#ff614e\" to=\"#ffdc64\" />\r\n\r\n            <RadialGradient id=\"backgroundSphere\" from=\"transparent\" to=\"#04002b\" toOpacity={\"40%\"} fromOpacity={\"60%\"} fromOffset={\"90%\"} />\r\n\r\n            <Canvas />\r\n\r\n            <Map />\r\n\r\n            <Lines />\r\n\r\n            <Points />\r\n\r\n            <DrawableArea />\r\n          </svg>\r\n        </Box>\r\n    );\r\n}","import React from 'react'\r\nimport { Action } from '../redux/modules/actions'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\n\r\nimport styled from 'styled-components'\r\nimport { Grid, Box } from 'grommet'\r\nimport { Radial } from 'grommet-icons'\r\n\r\nconst ListItem = ({ layer }) =>{\r\n    const dispatch = useDispatch()\r\n    const isSelected = layer.id === useSelector(state => state.Layers.selectedLayer.id)\r\n\r\n    function handleSelect(){\r\n        dispatch(Action.selectLayer(layer))\r\n    }\r\n\r\n    const ColorIndicator = styled(Radial)`\r\n        height: 100%;\r\n        padding: 0 5px 0 5px;\r\n    `;\r\n\r\n    const Info = styled.div`\r\n        margin: auto 0 auto 10px;\r\n        width: 100%\r\n    `;\r\n\r\n    const Item = styled.div`\r\n        border-bottom: 1px solid rgba(0,0,0,0.8);\r\n        background-color: ${props => props.isSelected ? 'rgba(0,0,0,0.3)' : 'rgba(0,0,0,0.1)'};\r\n        overflow: hidden;\r\n        height: 45px;\r\n        display: flex;\r\n        color: rgba(220,220,220,1);\r\n    `;\r\n\r\n    return (\r\n        <Item onClick={ handleSelect } isSelected={ isSelected }>\r\n            <Grid\r\n                style={{\"width\":\"100%\"}}\r\n                rows={['auto']}\r\n                columns={['auto', 'auto', '34px']}\r\n                gap=\"none\"\r\n                areas={[\r\n                    { name: 'name', start: [0,0], end:[0, 0] },\r\n                    { name: 'owner', start: [1,0], end:[1, 0] },\r\n                    { name: 'colorSelect', start: [2,0], end:[2, 0] },\r\n                ]}\r\n            >\r\n                <Info gridArea='name'>{`Layer ${layer.id}`}</Info>\r\n                <Info gridArea='owner'>{`Owner ${layer.owner.slice(0,5)}`}</Info>\r\n                <ColorIndicator gridArea='colorSelect' />\r\n            </Grid>\r\n        </Item>\r\n    );\r\n}\r\n\r\nexport const LayerList = props => {\r\n    const {localLayers, selectedLayer} = useSelector(state => state.Layers)\r\n\r\n    const ListFrame = styled(Box)`\r\n        height: 100%;\r\n        background: rgba(0,0,0,0.3);\r\n        overflow-y: scroll;\r\n    `;\r\n\r\n    const ResponsiveGridLayout = styled(WidthProvider(Responsive))`\r\n        margin: 0;\r\n    `;\r\n\r\n    const layouts = {\r\n        md: localLayers.map((_, i) => ({i: `${i}`, x: 0, y: i, w: 1, h: 1 }))\r\n    }\r\n    const listItems = localLayers.map((layer, i) => <ListItem key={`layerListItem${i}`} layer={layer} />)\r\n\r\n    return (\r\n        <ListFrame>\r\n            <ResponsiveGridLayout\r\n            className=\"LayersList\"\r\n            layouts={layouts}\r\n            breakpoints={{md: 0}}\r\n            cols={{md:1}}\r\n            rowHeight={10}\r\n            margin={[2, 2]}\r\n            containerPadding={[10,10]}\r\n            isDraggable={false}\r\n            >\r\n\r\n                { listItems }\r\n\r\n            </ResponsiveGridLayout>\r\n        </ListFrame>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Action } from '../redux/modules/actions'\r\n\r\nimport { Grid, Box } from 'grommet'\r\nimport { ChapterAdd, Trash } from 'grommet-icons'\r\nimport styled from 'styled-components'\r\n\r\n/*\r\n * Helper Functions\r\n */\r\n\r\nconst createLayer_Handler = (dispatch, owner) => {\r\n    const newLayer = {\r\n        id: Math.floor(Math.random()*100000),\r\n        owner:owner,\r\n        tool:'autopen',\r\n        color:'#000',\r\n        data:[]\r\n    }\r\n\r\n    dispatch(Action.addLayer(newLayer))\r\n    dispatch(Action.selectLayer(newLayer))\r\n}\r\n\r\nconst deleteLayer_Handler = (dispatch, selectedLayer) => {\r\n    dispatch(Action.deleteLayer(selectedLayer))\r\n}\r\n\r\n/*\r\n * Toolbar Component\r\n */\r\n\r\nexport const Toolbar = () => {\r\n    const dispatch = useDispatch()\r\n    const selectedLayer = useSelector(state => state.Layers.selectedLayer)\r\n    const sessionUser = useSelector(state => state.Session.userId)\r\n\r\n    const Bar = styled(Box)`\r\n        background: rgba(0,0,0,0.5);\r\n    `;\r\n\r\n    return (\r\n        <Bar direction=\"row\" >\r\n            <Trash onClick={() => {deleteLayer_Handler(dispatch, selectedLayer)}} />\r\n            <ChapterAdd onClick={() => {createLayer_Handler(dispatch, sessionUser)}} />\r\n        </Bar>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { LinkUp, LinkDown } from 'grommet-icons'\r\nimport { Box } from 'grommet'\r\n\r\nexport const SyncIndicators = () => {\r\n    const sendStatus = useSelector(state => state.Status.sendingData)\r\n    const receiveStatus = useSelector(state => state.Status.receivingData)\r\n\r\n    const sendColor = sendStatus ? 'var(--linkup)' : 'gray'\r\n    const receiveColor = receiveStatus ? 'var(--linkdown)' : 'gray'\r\n\r\n    return (\r\n        <Box direction=\"row\">\r\n            <LinkUp size=\"small\" color={sendColor} />\r\n            <LinkDown size=\"small\" color={receiveColor} />\r\n        </Box>\r\n    )\r\n}","import { ActionTypes, GuestActionTypes } from './actions'\r\nimport { initialState } from '../config'\r\n\r\n\r\n/*\r\n * *********************************************************************************************************\r\n *                                        HELPER FUNCTIONS\r\n * *********************************************************************************************************\r\n */\r\n\r\nfunction createReducer(initialState, handlers) {\r\n    return function reducer(state = initialState, action) {\r\n        if (handlers.hasOwnProperty(action.type)) {\r\n            return handlers[action.type](state, action)\r\n        } else {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst makeLayer = ({ id, owner, tool, color, data }) => ({\r\n    owner: owner,\r\n    id: id,\r\n    tool: tool,\r\n    data: data,\r\n    color: color,\r\n})\r\n\r\n/*\r\n * *********************************************************************************************************\r\n *                                        SUB-TREE REDUCERS\r\n * *********************************************************************************************************\r\n */\r\n\r\n\r\n    /* *****************************************************************************************************\r\n     * FROM SERVER --- (effectful) remote view of guest activities ==> async state updates\r\n     *//////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst updateGuestLayer = createReducer([], {\r\n    [GuestActionTypes.LAYER_ADD]: (state, action) => state.concat([makeLayer(action.layer)]),\r\n    [GuestActionTypes.LAYER_DELETE]: (state, action) => state.filter(layer => (layer.id !== action.layer.id) ),\r\n    [GuestActionTypes.LAYER_UPDATE_DATA]: (state, action) => state.reduce((acc, layer) =>\r\n        acc.concat([\r\n            (layer.id!==action.layer.id)\r\n                ? layer\r\n                : {...layer, data: layer.data.concat(action.new_data)}\r\n        ]),\r\n    []),\r\n    [GuestActionTypes.LAYER_UPDATE_COLOR]: (state, action) => state.reduce((acc, layer) => (layer!==action.layer) ? acc : {...layer, color: action.color}, []),\r\n})\r\n\r\n    /* *****************************************************************************************************\r\n     * IN-BROWSER USER SESSION --- local view of session user's activities ==> synchronous state updates\r\n     *//////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst updateCanvas = createReducer([], {\r\n        [ActionTypes.CANVAS_RESIZE]: (state, action) => action.size,\r\n    }\r\n)\r\n\r\nconst updateLayer = createReducer([], {\r\n    [ActionTypes.LAYER_ADD]: (state, action) => state.concat([makeLayer(action.layer)]),\r\n    [ActionTypes.LAYER_DELETE]: (state, action) => state.filter(layer => (layer.id !== action.layer.id) ),\r\n    [ActionTypes.LAYER_UPDATE_DATA]: (state, action) => state.reduce((acc, layer) =>{\r\n        console.log(action.layer.id, layer.id)\r\n        return acc.concat([\r\n            (layer.id !== action.layer.id)\r\n                ? layer\r\n                : {...layer, data: layer.data.concat(action.new_data)}\r\n        ])},\r\n    []),\r\n    [ActionTypes.LAYER_UPDATE_COLOR]: (state, action) => state.reduce((acc, layer) => (layer.id!==action.layer.id) ? acc : {...layer, color: action.color}, []),\r\n})\r\n\r\nconst selectLayer = createReducer([], {\r\n    [ActionTypes.LAYER_SELECT]: (state, action) => ({id: action.layer.id, owner: action.layer.owner}),\r\n})\r\n\r\nconst selectColor = createReducer([], {\r\n    [ActionTypes.PALETTE_SELECT]: (state, action) => action.color,\r\n})\r\n\r\nconst selectTool = createReducer([], {\r\n    [ActionTypes.TOOL_SELECT]: (state, action) => action.tool,\r\n})\r\n\r\nconst syncData = createReducer([], {\r\n    [ActionTypes.LAYER_UPDATE_DATA]: (state, action) => true,\r\n    [ActionTypes.UPDATE_DATA_COMPLETE]: () => false,\r\n})\r\n\r\n\r\n/*\r\n * *********************************************************************************************************\r\n *                                        MAIN REDUCER\r\n * *********************************************************************************************************\r\n */\r\n\r\nexport const stateReducer = (state = initialState, action) => {\r\n    return {\r\n        Canvas: {\r\n            size: updateCanvas(state.Canvas.size, action),\r\n        },\r\n        Palette: {\r\n            selectedColor: selectColor(state.Palette.selectedColor, action),\r\n            Colors: state.Palette.Colors\r\n        },\r\n        Toolbar: {\r\n            selectedTool: selectTool(state.Toolbar.selectedTool, action),\r\n            Tools: state.Toolbar.tools\r\n        },\r\n        Layers: {\r\n            selectedLayer: selectLayer(state.Layers.selectedLayer, action),\r\n            localLayers: updateLayer(state.Layers.localLayers, action),\r\n            guestLayers: updateGuestLayer(state.Layers.guestLayers, action),\r\n        },\r\n        Status: {\r\n            sendingData: syncData(state.Status.sendingData, action),\r\n            receivingData: false,\r\n        },\r\n        Session: state.Session\r\n    }\r\n}","import { GuestActionTypes } from './actions'\r\n\r\n/* RxJS Operators & Utilities */\r\nimport { ajax } from 'rxjs/ajax'; //creates observable from ajax request\r\n\r\n\r\n/* Websocket streaming utility */\r\nimport Pusher from 'pusher-js';\r\nimport { pusherConfig } from '../config'\r\n\r\n/*\r\n * ***************************************************\r\n * ASYNC Side-effects\r\n * ***************************************************\r\n */\r\n\r\n   // *SENDS DATA\r\n   // ************ used in `epics.js`  *******************\r\nexport const postUpdate = (action) => ajax({\r\n    url: 'https://agile-brushlands-35070.herokuapp.com/paint',//'http://localhost:4000/paint',\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: {\r\n      data: JSON.stringify(action)\r\n    }\r\n})\r\n\r\n   // *RECEIVES DATA\r\n   // ********* used in `configureStore.js`  *************\r\nconst pusher = new Pusher(pusherConfig.KEY, {\r\n    cluster: pusherConfig.CLUSTER,\r\n    forceTLS: true,\r\n})\r\n\r\nconst channel = pusher.subscribe('painting');\r\n\r\nexport const usePusherUpdates = (dispatch) => {\r\n    console.log(\"binding pusher `action` channel\")\r\n    channel.bind('action', (data) => {\r\n        const guestAction = JSON.parse(data.data)\r\n\r\n        const mapped_action = Object.assign(guestAction, { type: GuestActionTypes[guestAction.type] })\r\n        console.log(\"mapped action from server\", mapped_action)\r\n        dispatch( mapped_action )\r\n    });\r\n}","import { ActionTypes, Action } from './actions'\r\nimport { ofType, combineEpics } from 'redux-observable';\r\nimport { postUpdate } from './side-effects'\r\n\r\n/* RxJS Operators & Utilities */\r\nimport { mergeMap, map, catchError, debounceTime } from 'rxjs/operators';\r\nimport { of, fromEvent } from 'rxjs'\r\n\r\n\r\n\r\n\r\n/*\r\n * ***************************************************\r\n * MAIN Epic\r\n *  Similar to state reducers, epics compose together.\r\n * ***************************************************\r\n */\r\n\r\nexport const epicEffects = (action$, state$, deps) => combineEpics(\r\n  syncEpic,\r\n)(action$, state$, deps).pipe(\r\n  catchError((error, source) => {\r\n    console.error(\"epic error: \", error);\r\n    return source;\r\n  })\r\n);\r\n\r\n/*\r\n * ***************************************************\r\n * Sub-tree Epics\r\n * ***************************************************\r\n */\r\n\r\nconst A = ActionTypes\r\nconst syncEpic = (action$, state$, deps) => action$.pipe(\r\n  ofType(A.LAYER_ADD, A.LAYER_DELETE, A.LAYER_UPDATE_COLOR, A.LAYER_UPDATE_DATA),\r\n  mergeMap((action) =>\r\n    postUpdate(action).pipe( // `postUpdate()` is async!\r\n      debounceTime(1000),\r\n      map(ajax_response => { console.log(\"update posted\", Action.sendDataUpdateFulfilled(), ajax_response); return Action.sendDataUpdateFulfilled() }),\r\n      catchError(error => {\r\n        console.log('error: ', error);\r\n        return of(error);\r\n      })\r\n    )\r\n  )\r\n)\r\n\r\n\r\n/*\r\n * ***************************************************\r\n *  EXAMPLE:\r\n *   Make observable stream from window/document/element event\r\n * ***************************************************\r\n */\r\n\r\n//create observable that emits click events\r\nconst source = fromEvent(window, 'click');\r\n//map to string with given event timestamp\r\nconst example = source.pipe(map(event => `Event time: ${event.timeStamp}`));\r\n//output (example): 'Event time: 7276.390000000001'\r\nconst subscribe = example.subscribe(val => console.log(val));","/* State Management & (side) Effects */\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { stateReducer } from './modules/state'\r\nimport { epicEffects } from './modules/epics'\r\nimport { usePusherUpdates } from './modules/side-effects'\r\n\r\n/*\r\n * ***************************************************\r\n *   Redux DEV Tools --- Chrome Extension\r\n * ***************************************************\r\n */\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n/*\r\n * ***************************************************\r\n *  Epic Middleware (RxJS Observable-based effect management)\r\n * ***************************************************\r\n */\r\n\r\nconst epicMiddleware = createEpicMiddleware()\r\n\r\n\r\n/*\r\n * ***************************************************\r\n *  The Store - aka the main State-storing object, composed together with middleware\r\n * ***************************************************\r\n */\r\n\r\nconst store = createStore(\r\n    stateReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(epicMiddleware),\r\n    )\r\n)\r\n\r\nepicMiddleware.run(epicEffects)\r\n\r\n/*\r\n * ***************************************************\r\n *  Loosely couple the Store with our relay server via Pusher\r\n * ***************************************************\r\n */\r\n\r\nusePusherUpdates(store.dispatch)\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './Components/App/App';\n\nimport store from './redux/configureStore'\n\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\n\nimport { Mapp } from '../Mapp'\nimport { LayerList } from '../LayerList'\nimport { Toolbar } from '../Toolbar'\nimport { SyncIndicators } from '../SyncIndicator'\n\nimport { Grommet, Grid, Box } from 'grommet'\nimport styled from 'styled-components'\n\nexport default function App() {\n\n  const Title = styled(Box)`\n    font-family: \"bungee\";\n    font-size: 38px;\n    line-height: 30px;\n    color: white;\n    margin: 1% auto 0 auto;\n    width: 100%;\n    text-align: center;\n    z-index:101;\n  `;\n\n  const Indicators = styled(Box)`\n    position: absolute;\n    bottom: 5px;\n  `;\n\n  return (\n    <Grommet style={{\"height\":\"100vh\"}}>\n      <Grid\n        fill={true}\n        rows={['auto', 'xxsmall']}\n        columns={['1/4', '1/2', '1/4']}\n        gap=\"none\"\n        areas={[\n          { name: 'title', start: [1,1], end: [1,1]},\n          { name: 'leftPanel', start: [0,0], end:[0,1] },\n          { name: 'centerPanel', start: [1,0], end:[1,0] },\n          { name: 'rightPanel', start: [2,0], end:[2,1] }\n        ]}\n      >\n      <Box gridArea=\"title\">\n        <Title>Playmaker Strategist</Title>\n      </Box>\n\n      <Box style={{\"background\":\"rgba(0,0,0,0.3)\"}} gridArea=\"rightPanel\">\n        <Indicators>\n          <SyncIndicators />\n        </Indicators>\n      </Box>\n\n      <Box gridArea=\"leftPanel\">\n          <Toolbar />\n          <LayerList />\n      </Box>\n\n      <Box gridArea=\"centerPanel\" align=\"center\" justify=\"center\">\n        <Mapp />\n      </Box>\n\n      </Grid>\n    </Grommet>\n  );\n}","module.exports = __webpack_public_path__ + \"static/media/summonersrift.3b0be098.svg\";"],"sourceRoot":""}